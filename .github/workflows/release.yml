name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

jobs:
  build-and-upload:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build with cross
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          target: ${{ matrix.target }}
          args: --release

      - name: Archive binary
        shell: bash
        run: |
          binary_base="rlr"
          ext=""
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            ext=".exe"
          fi

          binary_name="${binary_base}${ext}"
          target_dir="target/${{ matrix.target }}/release"

          mkdir -p dist

          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp "${target_dir}/${binary_name}" "dist/"
            archive_name="${binary_base}-${{ matrix.target }}.zip"
            powershell.exe -Command "Compress-Archive -Path 'dist/${binary_name}' -DestinationPath 'dist/${archive_name}'"
          else
            cp "${target_dir}/${binary_base}" "dist/"
            archive_name="${binary_base}-${{ matrix.target }}.tar.gz"
            tar -czvf "dist/${archive_name}" -C dist "${binary_base}"
          fi

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.tar.gz
            dist/*.zip
            dist/install.sh
            dist/install.bat
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
